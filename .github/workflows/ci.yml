name: REACT CI

on:
  pull_request:
      branches: ["main","develop"]
jobs:
    Jest:
        runs-on: [ubuntu-latest] 
        strategy:
          matrix:
            node-version: [14.x] 
        steps:
          - uses: actions/checkout@v2
          - name: Use Node.js ${{ matrix.node-version }}
            uses: actions/setup-node@v1
            with:
              node-version: ${{ matrix.node-version }}
          - name: ======== YANR INSTALL 🧰 ========
            run: |
              npm i -g yarn &&
              yarn install --frozen-lockfile
          - name: ======== YANR BUILD 🔧 ========
            run : |
              yarn build
          - name: ======== BUILD FAIL 😨 ========
            uses: actions/github-script@v5
            with:
              github-token: ${{secrets.GITHUB_TOKEN}}
              script: |
                const ref = "${{github.ref}}"
                const pull_number = Number(ref.split("/")[2])
                await  github.rest.issues.createComment({
                  issue_number: context.issue.number,
                  owner: context.repo.owner,
                  repo: context.repo.repo,
                  body: '🔥 빌드 실패했습니다. 코드를 확인해주세요.'
                }) 
            if: failure()
          - name: ======== TEST START 🚀 ========
            run: |
              yarn test
          - name: ======== TEST FAIL 😨 ========
            uses: actions/github-script@v5
            with:
              github-token: ${{secrets.GITHUB_TOKEN}}
              script: |
                const ref = "${{github.ref}}"
                const pull_number = Number(ref.split("/")[2])
                await  github.rest.issues.createComment({
                  issue_number: context.issue.number,
                  owner: context.repo.owner,
                  repo: context.repo.repo,
                  body: '🔥 테스트 코드를 확인해주세요.'
                }) 
            if: failure()
          - name: ======== CI SUCCESS 🟢 ========
            uses: actions/github-script@v5
            with:
              github-token: ${{secrets.GITHUB_TOKEN}}
              script: |
                const ref = "${{github.ref}}"
                const pull_number = Number(ref.split("/")[2])
                await  github.rest.issues.createComment({
                  issue_number: context.issue.number,
                  owner: context.repo.owner,
                  repo: context.repo.repo,
                  body: '🚀 CI를 성공했습니다!!'
                })
            if: success()

